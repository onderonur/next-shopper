model City {
    id        String   @id @default(cuid())
    name      String
    region    Region   @relation(fields: [regionId], references: [id], onDelete: Cascade)
    regionId  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    order     Order[]
}

model Region {
    id          String    @id @default(cuid())
    name        String
    continent   Continent @relation(fields: [continentId], references: [id], onDelete: Cascade)
    continentId String
    cities      City[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model Continent {
    id        String   @id @default(cuid())
    name      String
    series    String
    regions   Region[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id               String             @id @default(cuid())
    user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId           String
    city             City               @relation(fields: [cityId], references: [id], onDelete: Cascade)
    cityId           String
    productsOnOrders ProductsOnOrders[]
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
}

model ProductsOnOrders {
    product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId String
    order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
    orderId   String
    count     Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@id([productId, orderId])
}
